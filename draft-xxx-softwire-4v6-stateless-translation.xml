<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2460 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC1918 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC3513 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3513.xml">
<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY I-D.ietf-softwire-dual-stack-lite SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-softwire-dual-stack-lite.xml'>
<!ENTITY I-D.ietf-behave-v6v4-xlate SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-behave-v6v4-xlate-23.xml'>
<!ENTITY I-D.ietf-behave-v6v4-xlate-stateful SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-behave-v6v4-xlate-stateful-12.xml'>
<!ENTITY I-D.despres-softwire-sam SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-despres-softwire-sam-01.xml'>
<!ENTITY I-D.despres-softwire-4rd SYSTEM 'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-despres-softwire-4rd-02.xml'>
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" docName="draft-xxx-softwire-4v6-translation-00"
     ipr="trust200902">
  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="4via6-stateless-translation">4via6 Stateless Translation</title>

    <author fullname="Tetsuya Murakami" initials="T." surname="Murakami">
      <organization>IP Infusion</organization>
      <address>
	    <postal>
          <street>1188 East Arques Avenue</street>
	      <city>Sunnyvale</city>
	      <country>USA</country>
	    </postal>
	    <email>tetsuya@ipinfusion.com</email>
      </address>
    </author>

    <author fullname="Satoru Matsushima" initials="S." surname="Matsushima">
      <organization>SoftBank</organization>
      <address>
 	    <postal>
          <street>1-9-1 Higashi-Shinbashi, Munato-ku</street>
	      <city>Tokyo</city>
	      <country>Japan</country>
	    </postal>
	    <email>satoru.matsushima@tm.softbank.co.jp</email>
      </address>
    </author>

    <author initials="G. Chen" surname="Chen" fullname="Gang Chen">
      <organization>China Mobile</organization>
      <address>
        <postal>
          <street>53A,Xibianmennei Ave., </street>
          <street>Xuanwu District,</street>
          <city>Beijing</city>
          <code>100053</code>
          <country>China</country>
        </postal>
        <email>chengang@chinamobile.com</email>
      </address>
    </author>

    <author fullname="Hui Deng" initials="H" surname="Deng">
      <organization>China Mobile</organization>   
      <address>
        <postal>
          <street>53A,Xibianmennei Ave.</street>
          <city>Beijing </city>
          <code>100053</code>
          <country>P.R.China</country>
        </postal>        
        <phone>+86-13910750201</phone>        
        <email>denghui02@gmail.com</email>
      </address>


    <!--  -->
    <date month="June" year="2011" />

    <area>Internet</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <keyword></keyword>

    <abstract>
      <t>Regarding IPv4 connectivity across IPv6-only network, IPv4 packets
      are encapsulated in IPv6 to cross a segment of IPv6-only network. In
      some particular network scenarios (i.e., wireless network), its
      bandwidth is very valuable and scarce resource. Operators in such a
      network usually hope to decrease the overhead as much as possible for
      saving the bandwidth in such a environment. Key aspects include stateless
      operations with the algorithmic mapping between IPv4 addresses and IPv6
      addresses.
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t> During the transition period from only IPv4 to IPv6, service provider's
      (SP's) infrastructure network will deploy IPv6. However service provider
      has not only to offer IPv6 connectivity but also to maintain a residual
      IPv4 connectivity for outgoing and incoming connections. For providing
      IPv4 connectivity across IPv6 network,
      <xref target="I-D.despres-softwire-4rd">4rd</xref> is a stateless solution
      to allow end-users in IPv4 network to communicate servers located in
      IPv4 Internet across IPv6 network by encapsulating the packets in IPv6.</t>

      <t>However, this solution is using IPv6 encapsulating mechanism in order
      to communicate IPv4 islands across IPv6 network. Hence, the additional
      IPv6 header is required and the size of the packet is increasing. If the
      network has the limited bandwidth like a wireless network, operators
      are unwilling to use this solution because the additional header might
      not be preferable. Meanwhile, the stateless NAT64 is proposed such as
      <xref target ="RFC6052"> </xref> and
      <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.</t>

      <t>This solution is using the same algorithmic address mapping rule
      between IPv4 addresses and IPv6 addresses defined in 
      <xref target="I-D.despres-softwire-4rd"></xref> but using the stateless
      address translation to forward IPv4 packets across IPv6 network similar
      to the stateless NAT64 defined in
      <xref target="RFC6052"></xref> and
      <xref target="I-D.ietf-behave-v6v4-xlate"></xref>
      in stead of IPv6 encapsulation using in
      <xref target="I-D.despres-softwire-4rd"></xref></t>
    </section>

    <section title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref target="RFC2119">
      RFC 2119</xref>.</t>
    </section>

    <section title="Terminology">

<list
style="hanging"
><t
hangText="Stateless4v6 domain:"
>A domain is composed out of an arbitrary number of 4v6 CE and Gateway nodes that share a mapping relationship between an operator assigned IPv6 prefix and one or more IPv4 subnets along with all the applicable TCP/UDP ports, all mapped into the IPv6 address space. An S4v6 system can have multiple domains.</t
><t
hangText="Stateless4v6 CE:"
>A CPE node that implements 4v6 functionality including NAT44 which is provisioned by means of S46. The device interfaces to the SP network using native IPv6 and provides a NAT44 and IPv4-IPv6 adaptation service to the user.</t
><t
hangText="Stateless4v6 Gateway"
>A Service Provider node that implements the stateless 4v6 adaptation functionality for interfacing between the SP’s IPv6 domain and an IPv4 domain in delivering end user IPv4 connectivity beyond the domain. </t
><t
hangText="IPv4 Address sharing"
> The notion of attributing the same IPv4 address by multiple CEs in an 4v6 domain.</t
><t
hangText="Port-set:"
>A set composed of unique TCP/UDP ports (ranges) associated to a IPv4 address. A single 4v6 CE is expected to have a single port-set for each IPv4 address.</t
><t
hangText="Port-set-id:"
>A numeric identifier of a given port set that is unique in a given 4v6 domain. A port-set-id is used to algorithmically determine the port-set members. The port-set-id is conveyed to CEs as part the CE’s IPv6 addressing information, ie it is part of IPv6 subnet or address of a given CE, and its format places no restriction on the use of SLAAC or DHCP addressing.</t
><t
hangText="CE-index:"
>A numeric value, composed of a full or partial IPv4 address and optionally a port-set-id, which uniquely identifies a given CE in an 4v6 domain.</t
></list
>

    </section>

    
    <section title="4via6 Translation Framework">
     
      <t>Figure 1 depicts the overall architecture with two IPv4 user networks
      connected through routed IPv6 networks. Therein, either IPv4 users are
      connected to IPv6 network via CPE with 4via6 translation modules, or IPv4
      hosts populating 4via6 translation modules directly connecting to IPv6
      network. </t> 
    
     <figure>
      <artwork><![CDATA[
      
          User 1
       Private IPv4
      |  Network
      |
   O------------------O
   |     4via6 CE     |
   | +------+-------+ |
   | |NAPT44| NAT46 | |\
   | +------+-------+ | \    ,-------.                      /------.
   |                  |  \,-'         `-.                ,-/       `-.
   O------------------O  /   Routed     \   O---------O /   Public   \
                         /    IPv6       \  |Stateless|/     IPv4     \
                        (    Network      --+  4via6  +-   Network     )
                         \               /  |   BR    |\              /
   O------------------O  \              /   O---------O \             /
   |      User 2      |   ;".         ,-'                `-.       ,-'
   | +-----+--------+ | ,"   `-------'                      ------'
   | |Port |  NAT46 | ,"
   | | Traslation   | |
   | +-----+--------+ |
   O---.--------------O


      ]]></artwork>
		  <postamble>Figure 1: </postamble>
      </figure>
      <t></t>

    <t>A unique IPv6 prefix can be assigned to each end-user device from SP's
    network. The end-user device generates IPv4 address or IPv4 address and
    port-range with the address mapping rule defined in
    <xref target="I-D.despres-softwire-4rd"></xref>.</t>

    <t>NAPT44 or Port translation in the end-user device has the reponsibility
    to change the source address and the source port or the source port in the
    IPv4 packets coming from a LAN and to change the destination address and 
    the destination port or the destination port in the IPv4 packet coming from
    a WAN. NAT46 has the responsibility to translate IPv4 addresses to IPv6
    addresses to forward the packets across IPv6 network and to translate IPv6
    addresses to IPv4 addresses to forward the packets received from SP's IPv6
    network instead of using IPv6 encapsulation/decapsulation defined in
    <xref target="I-D.despres-softwire-4rd"></xref>. This address mapping
    between IPv4 and IPv6 should be done with the address mapping rule defined
    in <xref target="I-D.despres-softwire-4rd"></xref></t>

    <t>At the remote IPv6 network edges, a stateless 4via6 border router (BR)
    are serving gateway to translate IPv6 to IPv4 for the incoming packets
    from the end-users as well as translate IPv4 to IPv6 for the incoming
    packet from the public IPv4 network. The address translation should be
    done with the address mapping rule defined in
    <xref target="I-D.despres-softwire-4rd"></xref></t> 

    </section>

    <section title="Stateless Translation Algorithm" anchor="stateless-translation">
      <t>The protocol specification for 4rd with the stateless NAT64 should be
      beased on <xref target="I-D.despres-softwire-4rd"></xref>. The only difference
      is the forwarding mechanism across IPv6 network infrastructure.  The automatic
      tunneling mechanism such as IPv4-in-IPv6 is used in
      <xref target="I-D.despres-softwire-4rd"></xref>. Instead, this draft is
      using the stateless network address translation such as
      <xref target="RFC6052"></xref> and
      <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.Differing from tunneling model,
      translation approach doesn't need to know BR IPv6 address. Instead of that, 
      a IPv6 mapping prefix should be delivered to 4via6 CPEs or 4via6 hosts for generating
      IPv6 address by catenating IPv4 destination address with IPv6 mapping prefix. Such 
      IPv6 mapping prefix shall be either the "Well-Known Prefix" or a "Network-Specific 
       Prefix" unique to the organization deploying the address translators.</t>

      <section anchor="ipv4-address-port" title="IPv4 address and port">
        <t>Before data flows are initiated, several stateless mapping rules should be
        set on 4via6 CPE or 4via6 hosts. 4via6 hosts or 4via6 CPE can acquire these 
        parameters in various ways, such as manual configuration by an administrator, 
        a new DHCPv6 option, etc. Each end-user device generates an IPv4 address or an
        IPv4 address and a port-range from an IPv6 prefix assigned from SP's network. 
        This must be done with the same rule defined in
        <xref target="I-D.despres-softwire-4rd">.</xref>. 
        In addition, 4via6 border router
        should also maintain stateless rule synchronized with 4via6 CPE or 4via6 hosts.
      </section>

      <section anchor="address-mapping-rule" title="Address mapping rule">
        <t>CE and BR must translate an IPv4 address to an IPv6 address before
        forwarding a packet across IPv6 network and translate an IPv6 address
        to an IPv4 address before forwarding a packet to an IPv4 facing interface.
        The address mapping between IPv4 addresses and IPv6 addresses must be
        done with the same address mapping rule defined in
        <xref target="I-D.despres-softwire-4rd"></xref>.</t>
      </section>

      <section title="Operations of 4via6 Stateless Translation ">
      <section anchor="packet-forwarding" title="Packet Forwarding on 4via6 CE ">
 
        <t>A 4via6 CE that receives IPv4 packets from CE LAN side checks the validity
        of its source and destination address. It also checks that the packet size
        is acceptable. If yes, NAT44 changes the IPv4 source address and the source
        port to its generated global IPv4 address and the port within the generated
        port-range. After that, stateless NAT64 performs the translation of IPv4
        source address and IPv4 destination address. The IPv4 source address is
        changed to the IPv6 address that is assigned to the 4via6 CE. The IPv4 destination
        address is translated based on <xref target="RFC6052"></xref>. And the IPv4
        header is replaced to the IPv6 header that is generated from the IPv4 header
        based on <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.</t>

        <t>The 4via6 CE that receives IPv6 packet from CE WAN side checks the validity
        of its source and destination address. It also checks that the packet size
        is acceptable. If yes, it translates the IPv6 source and the IPv6 destination 
        address in the received packets. The IPv6 destination address is changed to
        the IPv4 address that is generated in the 4via6 CE based on
        <xref target="I-D.despres-softwire-4rd"></xref>. The IPv6 source address is
        translated based on <xref target="RFC6052"></xref>. After that, the IPv6 header
        is replaced to the IPv4 header that is generated from the IPv6 header based on
        <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.</t>

        <t>The <xref target="4rd-ce-fig"></xref> shows the packet processing in 4via6 CE
        with stateless NAT64. Sometimes the existed NAT44 functionality is used for
        supporting multiple clients on CE LAN side in order to provide the global IPv4
        connectivity to all clients. This NAT44 functionality changes the IPv4 source
        address in the packets received from CE LAN side to the global IPv4 address
        that is generated based on 
        <xref target="I-D.despres-softwire-4rd"></xref>. 4rd functionality changes
        the IPv4 source address to the IPv6 source address that is assigned to 4via6 CE
        and translates the IPv4 destination address to the IPv6 destination address
        based on <xref target="RFC6052"></xref>. As the result, the IPv4 header is
        replaced to the IPv6 header based on 
        <xref target="I-D.ietf-behave-v6v4-xlate"></xref>. 
        Similary, when receiving IPv6 packets from CE WAN side, 4rd functionality
        changes the IPv6 destination address to its own global IPv4 address that is
        generated based on <xref target="I-D.despres-softwire-4rd"></xref> 
        and translates the IPv6 source address to the IPv4 source address based on
        <xref target="RFC6052"></xref>. As the result, the IPv6 header is replaced
        the IPv4 header based on <xref target="I-D.ietf-behave-v6v4-xlate"></xref>. 
        Then, NAT44 changes the IPv4 destination address based on its own NAT44 
        session state in order to deliver the packets to appropriate clients.</t>

        <figure align="center" anchor="4rd-ce-fig"
          title="4via6 CE">
          <preamble></preamble>

          <artwork align="center"><![CDATA[

               +------------------------------------+
     IPv4      |                                    |     IPv6
  CE LAN side  |  +--------+  +-------------------+  |  CE WAN side
---------------+--| NAPT44 |--|        4rd        |--+----------------
               |  |        |  | w/ stateles NAT64 |
               |  +--------+  +-------------------+  |
               |                                    |
               +------------------------------------+

          ]]></artwork>

        </figure>

        <t>A 4rd BR that receives IPv4 packets from the native IPv4 network checks
        the validity of its source and destination address. It also checks that
        the packet size is acceptable. If yes, it generates the IPv6 destination
        address from the IPv4 destination address based on
        <xref target="I-D.despres-softwire-4rd"></xref> and translates the IPv4
        source address to the IPv6 source address based on
        <xref target="RFC6052"></xref>. As the result, the IPv4 header is replaced
        to the IPv6 header based on
        <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.</t>

        <t>The 4rd BR that receives IPv6 packets from IPv6 network infrastructure
        checks the validity of its source and destination address. It also checks
        that the packet size is accpetable. If yes, it generates the IPv4 source
        address from the IPv6 source address based on
        <xref target="I-D.despres-softwire-4rd"></xref> and translates the IPv6
        destination address to the IPv4 destination address based on
        <xref target="RFC6052"></xref>. As the result, the IPv6 header is replaced
        to the IPv4 header based on 
        <xref target="I-D.ietf-behave-v6v4-xlate"></xref>.</t>

        <t>4via6 CE is not stateless if using the existed NAPT44 functionality in 
        order to support multiple clients on CE LAN side. However, 4rd functionality
        in 4via6 CE is still stateless. In addition, 4rd BR is completely stateless.</t>
      </section>

        <section title="Operations on 4via6 Hosts">
     
        <t>4via6 hosts could get IPv6 prefix through SLAAC(Stateless address autoconfiguration).
        Afterwards, the host will generate IPv6 address assigned to one of host's interfaces 
        by concatenating IPv6 suffix which has been contained in pre-configured stateless mapping rules. 
        Since the assigned IPv6 prefix would encode port range as a part, 4via6 host will 
        derive shared IPv4 address with constrained port range from such IPv6 prefix 
        according to the stateless algorithm. In order to support IPv4 application calling, 
        the generated IPv4 address should be provided to applications. 
        Meanwhile, port constrains should not be applied to the application, because applications
        would expect to bind to a specific port number. Therein, only port translation functions 
        are serving for converting normal port into constrained port range without NAT44 translation. </t> 
    
	<t>The below details the traffic processing for outbound and inbound data packages. </t> 
    
         <t>For outbound traffic operation, 4via6 hosts will intercept IPv4 socket calling or 
        IPv4 data packages derived from IPv4 applications. Port translation is performed for 
        source port conversion. Before implementing NAT46, the host should match IPv4 destination 
        with pre-configured mapping rules. if IPv4 destination address falls into the domain 
        IPv4 prefix in mapping rules, the stateless algorithm is applied to both source and
        destination address for generating source and destination IPv6 address. 
        After NAT46 translation, data packages would be directly to transmit to another 4via6 host. 
        Otherwise, the stateless algorithm is only applied to source address generation. 
        Regarding to destination address, IPv6 mapping prefix should be concatenated with 
        IPv4 address to form a IPv4-embedded IPv6 address, in which IPv4 address is encoded 
        in positions 96 to 127. After NAT46 translation, data packages will be sent 
        BR for subsequential operations. </t> 
    
         <t>For inbound traffic operation, 4via6 hosts will receive IPv6 data packages
         from ISP network. The host should match IPv6 source address with pre-configured 
         mapping rules. if IPv6 source address falls into the domain IPv6 prefix in mapping 
         rules, the stateless algorithm is applied to both source and destination address 
         for deriving IPv4 source and destination address. Accomplishing IPv6 to IPv4 translation, 
         the host should be capable of port translation to deliver data packages to an appropriate 
         IPv4 application. Otherwise, the stateless algorithm is only applied to destination address.
         Regarding to IPv6 source address, the host should simply strip IPv6 mapping prefix to extract IPv4 
         address from positions 96 to 127. Afterwards, the host deliver data packages to internal 
         IPv4 hosts. </t>  
      
        </section>   
  
       <section title="Operations on BR">
     
      <t>In order to interconnecting IPv6 network with public IPv4 Internet, BR would take
      stateless algorithm for translating IPv6 to IPv4. </t>
    
      <t>The below details the traffic processing for outbound and inbound data packages. </t> 
    
      <t>For outbound traffic operation, 4via6 BR will receive IPv6 data packages from
      4via6 CE. BR would generate IPv4 address and port range from source IPv6 address
      automatically. for destination IPv6 address, a IPv6 mapping prefix will be stripped
      to get out IPv4 address. Both source and destination address is stateless.</t> 
    
      <t>For inbound traffic operation, 4via6 BR will receive IPv4 data packages from IPv4
      Internet. BR should match IPv4 destination with pre-configured mapping rules. if IPv4
      destination address falls into the domain IPv4 prefix in mapping rules, IPv6 address
      can be decided from IPv4 address and port statelessly. The source IPv4 address would
      be concatenated with IPv6 mapping prefix to form a natural IPv6 source address. </t>
      </section>
       

      <section anchor="pmtu-consideration" title="PMTU Consideration">
        <t>To properly deal with the large size IPv4 datagrams that some applications
        use, in particular with UDP, precautions are needed because of the important 
        difference between IPv4 and IPv6 treatments of datagram fragmentation, and 
        because ports, that may have to be known in 4via6 CEs and BRs, only appear in 
        first fragments of long datagrams. (Since SP's network infrastructure is IPv6,
        intermediate node discards the packets which are longer than the MTU of next 
        links to be traversed and ends ICMP Packet Too Big ICMPv6 error packets back 
        to sources. However, because all IPv6 links must support all packets up to 
        1280 octets, such discards are completely avoided by sources that limit each 
        fragment size to 1280 octets when source and destination are not on the same
        link.).</t>

        <t>To cope with these constraints, a logically simple solution is that 4via6 CEs
        and 4rd BRs reassemble multi-fragment IPv4 datagrams before processing them. 
        (This function is stateful at the IP layer like the same function in NAPTs. But
        4rd remains stateless at the transport-connection layer, while NAPTs are stateful
        at this layer, and above this layer if they support ALGs.)  After reassembly if 
        applicable, each datagram is processed as a single packet and fragmented again 
        to fit to PMTU in the SP's IPv6 network infrastructure in 4via6 CE and 4rd BR 
        before encapsulating in IPv6. After encapsulating each fragmented IPv4 packet 
        in IPv6 in 4via6 CE and 4rd BR, it is forwarded over SP's IPv6 netowkr 
        infrastructure.</t>
      </section>

    </section>

       <section anchor="security" title="Security Considerations">
      <t>In order to prevent from spoofing attack, the address-consistency of
      the source address of the encapsulating and encapsulated packets must be
      checked upon receiving the packets from a 4rd domain. If the IPv4 source
      address in encapsulated IPv4 packet is based on 4rd prefix, IPv4 source
      address in encapsulated IPv4 packet must be able to be generated from IPv6
      source address in encapsulating IPv6 packet.  If the IPv4 source address
      is not based on 4rd prefix, the destination address of the reverse path
      toward the IPv4 source address in encapsulated IPv4 packet must be same
      as IPv6 source address in encapsulating IPv6 packet.</t>

      <t>In order to avoid forwarding loop, both 4rd BR and 4via6 CE must not
      forward the packets received from a specified 4rd domain to the same
      4rd domain.</t>
    </section>

    <section anchor="iana" title="IANA Consideration">
      <t>This document has no IANA actions.</t>
    </section>

    <section anchor="acknowledgements" title="Acknowledgements">
    </section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC2460;
      &RFC4291;
    </references>

    <references title="Informative References">
      &I-D.despres-softwire-sam;
      &I-D.despres-softwire-4rd;
      &I-D.ietf-softwire-dual-stack-lite;
      &I-D.ietf-behave-v6v4-xlate;
      &I-D.ietf-behave-v6v4-xlate-stateful;
      &RFC1918;
      &RFC3513;
      &RFC6052;
    </references>

<!-- Change Log

v00 2011-06-27  TM	Initial version

-->
  </back>
</rfc>
